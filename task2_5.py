# 5. Реализовать структуру «Рейтинг»,
# представляющую собой не возрастающий набор натуральных чисел.
# У пользователя необходимо запрашивать новый элемент рейтинга.
# Если в рейтинге существуют элементы с одинаковыми значениями,
# то новый элемент с тем же значением должен разместиться после них.
#
# Подсказка. Например, набор натуральных чисел: 7, 5, 3, 3, 2.
# Пользователь ввел число 3. Результат: 7, 5, 3, 3, 3, 2.
# Пользователь ввел число 8. Результат: 8, 7, 5, 3, 3, 2.
# Пользователь ввел число 1. Результат: 7, 5, 3, 3, 2, 1.
# Набор натуральных чисел можно задать непосредственно в коде, например, my_list = [7, 5, 3, 3, 2].

# мой код до разбора дз: многа букав

number = int(input("Enter number: "))
my_list = [7, 5, 3, 3, 2]
x = my_list.count(number)  # ---- считаем, есть ли и сколько number в нашем списке, если ест x>0, если нет, x=0
for i in my_list:
    if x > 0:  # если в списке уже есть такое число:
        y = my_list.index(number)  # мы ищем индекс у этого числа
        my_list.insert(y + x, str(number))  # и вставляем наше число по индексу x+y,
        # то есть берем кол-во этого числа из списка и прибавляем к нему его индекс
        break
    else:
        if number > i:  # если номера в списке нет, то x = 0
            z = my_list.index(i)  # мы индекс числа, которое меньше вводимого но больше всех остальных
            my_list.insert(z, str(number))  # далее вставляем по индексу меньшего наше число
            break
        elif number < my_list[len(my_list) - 1]:  # вызываем последний элемент
            # находим длину списка,
            # из него вычитаем 1 = это бует индекс последнего элемента и my_list[от индекса последнего эл-та]
            # (так мы поймем, какой элемент у нас последний)
            my_list.append(number)
print(my_list)


# после разбора дз
number = int(input("Enter number: "))
my_list = [7, 5, 3, 3, 2]
i = 0
for x in my_list:
    if number <= x:
        i += 1
my_list.insert(i, number)
print(my_list)
